name: Full Gradle + Java Setup for Aptoide Scraper

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  setup_and_run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Initialize Gradle Project (Force Overwrite)
        run: |
          rm -rf gradle build.gradle settings.gradle src
          gradle init --type java-application --dsl groovy --package AptoideScraperProject --project-name AptoideScraperProject --overwrite
          mkdir -p src/main/java

      - name: Replace Gradle Build Files
        run: |
          cat <<EOF > settings.gradle
          rootProject.name = 'AptoideScraperProject'
          EOF

          cat <<EOF > build.gradle
          plugins {
              id 'java'
              id 'application'
          }

          repositories {
              mavenCentral()
          }

          dependencies {
              implementation 'org.jsoup:jsoup:1.15.3'
              implementation 'org.apache.httpcomponents.client5:httpclient5:5.2'
          }

          application {
              mainClass = 'AptoideScraper'
          }

          task extractDownloadLink(type: JavaExec) {
              mainClass = 'AptoideScraper'
              classpath = sourceSets.main.runtimeClasspath
          }
          EOF

      - name: Create Java Scraper File
        run: |
          cat <<EOF > src/main/java/AptoideScraper.java
          import org.jsoup.Jsoup;
          import org.jsoup.nodes.Document;
          import org.jsoup.nodes.Element;
          import java.io.IOException;
          import java.util.regex.Matcher;
          import java.util.regex.Pattern;

          public class AptoideScraper {
              public static void main(String[] args) {
                  String appName = "instagram";  // Change app name if needed
                  String searchUrl = "https://en.aptoide.com/search?query=" + appName;
                  
                  try {
                      // Step 1: Search for the app and find the first package URL
                      Document searchDoc = Jsoup.connect(searchUrl)
                              .userAgent("Mozilla/5.0 (Windows NT 10.0; Win64; x64)")
                              .get();
                      
                      Element firstResult = searchDoc.selectFirst("a[data-app-package]");
                      if (firstResult == null) {
                          System.out.println("Error: App not found.");
                          System.exit(1);
                      }

                      String packageName = firstResult.attr("data-app-package");
                      String appUrl = "https://" + packageName + ".en.aptoide.com/app";

                      // Step 2: Fetch the APK download link from the app page
                      Document appDoc = Jsoup.connect(appUrl)
                              .userAgent("Mozilla/5.0 (Windows NT 10.0; Win64; x64)")
                              .get();

                      Pattern pattern = Pattern.compile("\"apkUrl\":\"(https://[^\"]+)\"");
                      Matcher matcher = pattern.matcher(appDoc.html());

                      if (matcher.find()) {
                          System.out.println("Direct Download Link: " + matcher.group(1));
                      } else {
                          System.out.println("Error: Download link not found.");
                          System.exit(1);
                      }
                  } catch (IOException e) {
                      System.out.println("Error: Unable to access Aptoide.");
                      System.exit(1);
                  }
              }
          }
          EOF

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Build and Run Scraper
        run: ./gradlew extractDownloadLink
